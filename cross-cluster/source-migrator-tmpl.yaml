apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: "migrate-src-template"
  annotations:
    description: "Template to create a runnable pod intended to copy storage content from one PVC to another."
    tags: storage,migration
parameters:
- name: NAME
  description: "Name of the deployment."
  value: "source-pvc-migrator"
- name: SOURCE_PVC
  description: "Name of an existing PVC to use as the content destination."
  required: true
- name: REMOTE_CLUSTER
  displayName: Remote Cluster API URL
  description: The URL of the remote cluster API (including port)
  required: true
- name: REMOTE_PROJECT
  displayName: Remote Namespace
  description: The name of the remote namespace (project)
  required: true
- name: REMOTE_SECRET
  displayName: Remote Cluster token secret
  description: The name of the secret that contains an access token
  required: true
- name: SRC_IMAGE_NAME
  displayName: Container Image Name
  description: The name of the image to use for this resource.
  required: true
  value: pvc-migrator
- name: SRC_IMAGE_NAMESPACE
  displayName: Image Namespace
  description: The namespace of the OpenShift project containing the imagestream for the application.
  required: true
  value: bztwou-dev
- name: SRC_IMAGE_REGISTRY
  #ocp3#docker-registry.default.svc:5000
  value: docker-registry.default.svc:5000
- name: TAG_NAME
  displayName: Environment TAG name
  description: The TAG name for this environment, e.g., dev, test, prod
  required: true
  value: dev
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${NAME}
    labels:
      app: ${NAME}
      base: xc-pvc-migrator
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${NAME}
    template:
      metadata:
        labels:
          app: ${NAME}
          base: xc-pvc-migrator
      spec:
        containers:
        - name: ${NAME}
          image: ${SRC_IMAGE_REGISTRY}/${SRC_IMAGE_NAMESPACE}/${SRC_IMAGE_NAME}:latest
          command:
            - bash
            - '-c'
            - >-
              mkdir -p /target/tkube &&
              touch /target/tkube/KUBECONFIG &&
              oc login --token=${TARGET_TOKEN} --server=${TARGET_CLUSTER_API} --kubeconfig=/target/tkube/KUBECONFIG &&
              oc project ${TARGET_PROJECT}
              nohup `tail -f /dev/null > /dev/null`
          env:
            - name: TARGET_TOKEN #target cluster token for oc to use
              valueFrom:
                secretKeyRef:
                  key: token
                  name: ${REMOTE_SECRET}
            - name: TARGET_CLUSTER_API # target cluster token for oc to use (must provide)
              value: ${REMOTE_CLUSTER}
            - name: TARGET_PROJECT # target cluster project/ namespace
              value: ${REMOTE_PROJECT}
          volumeMounts:
          - name: source
            mountPath: /source
          - name: target
            mountPath: /target
        volumes:
        - name: source
          persistentVolumeClaim:
            claimName: ${SOURCE_PVC}
        - name: target
          emptyDir: {}

